{"id":null,"title":"The Prisoners Problem (final)","ccs":"*------ENVIROMENT----------*\n*Light process:\n* Unknown at the beginning whether the light is ON \nLight = tau.LightON+tau.LightOFF; *unknown initial state\nLightON = turnOFF.LightOFF;\nLightOFF = turnON.LightON;\n\n*Living room process\nRoom = roomIN.full.isFull.roomOUT.empty.Room;\n*--------------------------*\n*--------------------Prisoners--------------------------*\n* ack, full and empty are used to make confortable the bisimulation.\n* isFull is to notify that the \"full\" action has been performed\n***********\nStartPr= 'roomIN.'isFull.ack.CommonPrisoner;\nCommonPrisoner= (('turnON.'roomOUT.RepeatingingPrisoner)+('turnOFF.'turnON.'roomOUT.'roomIN.'isFull.CommonPrisoner));\n\n*CommonPrisoner= 'roomIN.'isFull.(('turnON.ack.'roomOUT.RepeatingingPrisoner)+('turnOFF.'turnON.'roomOUT.CommonPrisoner));\nRepeatingingPrisoner = 'roomIN.'isFull.(('turnON.'roomOUT.IdlePrisoner)+('turnOFF.'turnON.'roomOUT.RepeatingingPrisoner));\nIdlePrisoner = 'roomIN.'isFull.'roomOUT.IdlePrisoner;\n\nCounterPrisoner=   'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner7)+('turnON.'turnOFF.'roomOUT.CounterPrisoner));\nCounterPrisoner7 = 'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner6)+('turnON.'turnOFF.'roomOUT.CounterPrisoner7));\nCounterPrisoner6 = 'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner5)+('turnON.'turnOFF.'roomOUT.CounterPrisoner6));\nCounterPrisoner5 = 'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner4)+('turnON.'turnOFF.'roomOUT.CounterPrisoner5));\nCounterPrisoner4 = 'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner3)+('turnON.'turnOFF.'roomOUT.CounterPrisoner4));\nCounterPrisoner3 = 'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner2)+('turnON.'turnOFF.'roomOUT.CounterPrisoner3));\nCounterPrisoner2 = 'roomIN.'isFull.(('turnOFF.'roomOUT.CounterPrisoner1)+('turnON.'turnOFF.'roomOUT.CounterPrisoner2));\nCounterPrisoner1 = 'roomIN.'isFull.(('turnOFF.'roomOUT.'freeAll.0)+('turnON.'turnOFF.'roomOUT.CounterPrisoner1));\n*CounterPrisoner1 = 'roomIn.'isFull.(('turnOff.'roomOut.CertaintyState)+('turnOn.'turnOff.'roomOut.CounterPrisoner1));\n*CertaintyState = 'freeAll.0;\n\n* If the prison contains n prisoners (including the counting one), the countdown starts at 2(n-1)\nFreeProSys = ((Room | Light | StartPr | StartPr | StartPr | StartPr | CounterPrisoner)\\{turnOFF, turnON, roomIN, roomOUT, isFull});\n*-----------------------------SPECIFICATION-------------------------------------\n*-1-\n*FREEALL performed after that all prisoner have entered in the room at least one time\nSpec1FreeProSys = ack.ack.ack.ack.'freeAll.Idle;\nIdle = tau.Idle;\nFreeProSys1=FreeProSys[tau/full, tau/empty];\n*-------------------------------------------------------------------------------\n*-2-\nSpec2FreeProSys = full.ack.empty.MutexSpec;*+(full.empty.Spec2FreeProSyst);\nMutexSpec = full.empty.MutexSpec;\nPrisonerBehaviour = ((Room | Light | StartPr)\\{turnOFF, turnON, roomIN, roomOUT, isFull});\n*--------------------------------------------------------------------------------\n*-3-\nFreeProSys3= FreeProSys[tau/ack, tau/freeAll]; ","properties":[{"className":"Bisimulation","status":0,"options":{"type":"weak","time":null,"firstProcess":"FreeProSys1","secondProcess":"Spec1FreeProSys","comment":""}},{"className":"Bisimulation","status":0,"options":{"type":"weak","time":null,"firstProcess":"MutexSpec","secondProcess":"FreeProSys3","comment":""}},{"className":"Bisimulation","status":0,"options":{"type":"weak","time":null,"firstProcess":"PrisonerBehaviour","secondProcess":"Spec2FreeProSys","comment":""}},{"className":"HML","status":0,"options":{"process":"FreeProSys1","definitions":"","topFormula":"[[ack]][[ack]][[ack]][[ack]](<<'freeAll>>tt and [[ack]]ff and [['freeAll]][[ack,'freeAll]]ff);","comment":"Spec1 after 4 ack"}},{"className":"HML","status":0,"options":{"process":"FreeProSys1","definitions":"","topFormula":"[[ack]]([['freeAll]]ff and <<ack>>tt);","comment":"Spec1 no freeAll after firs ack"}},{"className":"HML","status":0,"options":{"process":"FreeProSys1","definitions":"","topFormula":"[[ack]][[ack]]([['freeAll]]ff and <<ack>>tt);","comment":""}},{"className":"HML","status":0,"options":{"process":"FreeProSys1","definitions":"","topFormula":"[[ack]][[ack]][[ack]]([['freeAll]]ff and <<ack>>tt);","comment":"Spec1 no freeAll after only three ack"}},{"className":"HML","status":0,"options":{"process":"FreeProSys1","definitions":"","topFormula":"([['freeAll]]ff and <<ack>>tt);","comment":"Spec1 freeAll must not performed immediatly\nSpec2 also"}},{"className":"HML","status":0,"options":{"process":"FreeProSys3","definitions":"X max= [[full]](<<empty>>X and [[full]]ff);","topFormula":"X and [[empty]]ff and <<full>>tt;","comment":"Spec3"}},{"className":"HML","status":0,"options":{"process":"PrisonerBehaviour","definitions":"X max= <<full>>(<<empty>>X and [[ack,full]]ff);","topFormula":"[[empty,ack]]ff and [[full]][[ack]][[empty]]X;","comment":"Spec2 the prisoner can do only one ack in all the game"}}],"inputMode":"CCS"}